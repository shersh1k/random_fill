{"version":3,"sources":["Helpers/classes.ts","Helpers/functions.ts","store/game/actions.ts","store/game/types.ts","components/Configurator/index.tsx","components/Header/index.tsx","components/ControlPanel/Title.tsx","components/ControlPanel/index.tsx","components/GameField/index.tsx","components/Game/index.tsx","components/Footer/index.tsx","components/App/index.tsx","serviceWorker.ts","store/game/reducers.ts","store/index.ts","index.tsx"],"names":["TCell","content","opacity","this","Cell","x","y","currentContent","gameField","makeFieldMatrix","color","fieldMatrix","iX","firstLevelArray","iY","push","getRandomInt","max","Math","floor","random","autofilling","boolArr","map","itemY","itemX","filter","item","length","forEach","checkSiblings","field","isInsideField","top","right","bottom","left","siblingCellsArr","undefined","setTempFieldMatrix","newFieldMatrix","dispatch","type","tempFieldMatrix","setPlayer","player","dice","currentFigure","currentPlayer","Configurator","useDispatch","initialValues","players","onFinish","config","index","name","count","className","title","direction","Item","layout","label","rules","required","message","min","List","fields","add","remove","style","minHeight","minWidth","key","noStyle","placeholder","width","MinusCircleOutlined","marginLeft","onClick","PlusOutlined","block","htmlType","labelCol","span","wrapperCol","Header","Title","additionScore","useSelector","state","game","flat","fontSize","ControlPanel","newFigureRef","useRef","dices","useState","stepDone","setStepDone","rollDiceDone","setRollDiceDone","mouseMoveHandler","useCallback","e","current","pageX","offsetWidth","pageY","offsetHeight","currentFigureX","currentFigureY","position","actions","icon","UndoOutlined","disabled","CaretRightOutlined","isDifferent","join","playerIndex","findIndex","nextPlayer","Object","assign","display","justifyContent","size","playerColor","firstDice","secondDice","FallOutlined","rotateFigure","RotateRightOutlined","onConfirm","danger","FastForwardOutlined","ref","onMouseDown","document","addEventListener","onMouseUp","removeEventListener","backgroundColor","zIndex","GameField","fieldMatrixRef","cellSide","geometry","setGeometry","useEffect","resizeHandler","getBoundingClientRect","window","insideX","insideY","isInsideGameField","rectCoord","mouseOverCellX","mouseOverCellY","xStart","round","xEnd","yStart","yEnd","setRectangleCells","isFM","isOverEdge","isInCorner","figure","isFirstMove","siblingCells","reduce","acc","arr","isInsertByRules","indexY","indexX","slice","fillFieldMatrix","Game","Footer","href","App","Boolean","location","hostname","match","initialState","middlewares","thunkMiddleware","store","createStore","combineReducers","action","applyMiddleware","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.406bac77.chunk.js","sourcesContent":["export class TCell {\r\n  content: boolean | '?' | null;\r\n  opacity: number;\r\n  constructor(content: boolean | '?' | null, opacity: number) {\r\n    this.content = content;\r\n    this.opacity = opacity;\r\n  }\r\n}\r\n\r\nexport class Cell {\r\n  x: number;\r\n  y: number;\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n  currentContent = (gameField: TCell[][]) => {\r\n    return gameField[this.y]?.[this.x];\r\n  };\r\n}\r\n","import { Dice, PlayerColor, GameArray, TypeCell, iConfig, Dices, iPlayer } from '../store/game/types';\r\nimport { TCell, Cell } from '.';\r\nimport { iPosition, iRectangleCells } from './interfaces';\r\n\r\nexport function makeFieldMatrix(x: number, y: number, color?: PlayerColor): GameArray {\r\n  const fieldMatrix: GameArray = [];\r\n  for (let iX = 0; iX < x; iX++) {\r\n    const firstLevelArray: Array<TypeCell | null> = [];\r\n    for (let iY = 0; iY < y; iY++) firstLevelArray.push(color ? { color, opacity: 1 } : null);\r\n    fieldMatrix.push(firstLevelArray);\r\n  }\r\n  return fieldMatrix;\r\n}\r\n\r\nexport function getRandomInt(max: number = 6): Dice {\r\n  return (Math.floor(Math.random() * max) + 1) as Dice;\r\n}\r\n\r\nexport function autofilling(fieldMatrix: GameArray, color: PlayerColor) {\r\n  const boolArr = fieldMatrix.map((itemY, iY) => {\r\n    return itemY.map((itemX, iX) => {\r\n      if (itemX?.color === color) return new TCell(true, itemX.opacity);\r\n      if (itemX === null) return new TCell(null, 1);\r\n      else return new TCell(false, itemX.opacity);\r\n    });\r\n  });\r\n  if (boolArr.filter((item) => item.filter((item) => item.content === false).length).length) {\r\n    let a = fillTrue(boolArr);\r\n    a.forEach((item, iY) =>\r\n      item.forEach((item, iX) => {\r\n        if (item.content === true) fieldMatrix[iY][iX] = { color, opacity: item.opacity };\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function fillTrue(gameField: Array<Array<TCell>>): TCell[][] {\r\n  gameField.forEach((itemY, iY) =>\r\n    itemY.forEach((itemX, iX) => {\r\n      if (gameField[iY][iX].content === false) return;\r\n      else {\r\n        checkSiblings(gameField, { y: iY, x: iX });\r\n        gameField.forEach((item, iY) =>\r\n          item.forEach((item, iX) => {\r\n            if (item.content === '?') {\r\n              gameField[iY][iX].content = true;\r\n              gameField[iY][iX].opacity = 0.5;\r\n            }\r\n          })\r\n        );\r\n      }\r\n    })\r\n  );\r\n  return gameField;\r\n}\r\n\r\nexport function checkSiblings(gameField: Array<Array<TCell>>, { x, y }: iPosition): boolean {\r\n  if (gameField[y][x].content === true || isInsideField(x, y, gameField)) return true;\r\n\r\n  const top = new Cell(x, y - 1);\r\n  const right = new Cell(x + 1, y);\r\n  const bottom = new Cell(x, y + 1);\r\n  const left = new Cell(x - 1, y);\r\n  const siblingCellsArr = [top, right, bottom, left];\r\n\r\n  if (siblingCellsArr.filter((item) => item.currentContent(gameField)?.content === false).length > 0) {\r\n    siblingCellsArr.forEach((item) => {\r\n      if (item.currentContent(gameField) !== undefined && item.currentContent(gameField).content !== true)\r\n        gameField[item.y][item.x].content = false;\r\n    });\r\n    if (gameField[y][x] !== undefined && gameField[y][x].content !== true) gameField[y][x].content = false;\r\n    gameField.forEach((item, iY) =>\r\n      item.forEach((item, iX) => {\r\n        if (item.content === '?') gameField[iY][iX].content = false;\r\n      })\r\n    );\r\n    return false;\r\n  } else {\r\n    gameField[y][x].content = '?';\r\n    const arr = siblingCellsArr.filter((item) => {\r\n      if (\r\n        item.currentContent(gameField) === undefined ||\r\n        item.currentContent(gameField).content === true ||\r\n        item.currentContent(gameField).content === '?'\r\n      )\r\n        return true;\r\n      if (item.currentContent(gameField).content === null) {\r\n        return checkSiblings(gameField, { x: item.x, y: item.y });\r\n      }\r\n      return false;\r\n    });\r\n    return arr.length >= 4;\r\n  }\r\n}\r\n\r\nexport function isInsideField(x: number, y: number, field: TCell[][]) {\r\n  if (y < 0 || x < 0 || y >= field.length || x >= field[0].length) return true;\r\n  return false;\r\n}\r\n\r\nexport function isFirstMove(count?: number) {\r\n  return count === 0;\r\n}\r\n\r\nexport function isInsideGameField(geometry: DOMRect, currentFigureX: number, currentFigureY: number) {\r\n  const insideX = geometry.left < currentFigureX && geometry.right > currentFigureX;\r\n  const insideY = geometry.top < currentFigureY && geometry.bottom > currentFigureY;\r\n  if (insideX && insideY) return true;\r\n  return false;\r\n}\r\n\r\nexport function isInCorner(rectCoord: iRectangleCells, { x, y }: iConfig) {\r\n  if (\r\n    (rectCoord.xStart <= 0 && rectCoord.yStart <= 0) ||\r\n    (rectCoord.xEnd === x && rectCoord.yStart <= 0) ||\r\n    (rectCoord.xStart === 0 && rectCoord.yEnd === y) ||\r\n    (rectCoord.xEnd === x && rectCoord.yEnd === y)\r\n  )\r\n    return true;\r\n  return false;\r\n}\r\n\r\nexport function isOverEdge(rectCoord: iRectangleCells, { x, y }: iConfig) {\r\n  if (rectCoord.xStart < 0 || rectCoord.xEnd > x || rectCoord.yStart < 0 || rectCoord.yEnd > y) return true;\r\n  return false;\r\n}\r\n\r\nexport function setRectangleCells(mouseOverCellX: number, mouseOverCellY: number, dice: Dices): iRectangleCells {\r\n  return {\r\n    xStart: Math.round(mouseOverCellX - dice[1] / 2),\r\n    xEnd: Math.round(mouseOverCellX + dice[1] / 2),\r\n    yStart: Math.round(mouseOverCellY - dice[0] / 2),\r\n    yEnd: Math.round(mouseOverCellY + dice[0] / 2),\r\n  };\r\n}\r\n\r\nexport function isInsertByRules(field: GameArray, figure: iRectangleCells, player: iPlayer, isFirstMove: boolean) {\r\n  if (isFirstMove) return true;\r\n  const siblingCells = field.reduce((acc, itemY, iY, arr) => {\r\n    if (figure.yStart - 1 === iY || iY === figure.yEnd)\r\n      acc.push(...itemY.filter((itemX, iX) => figure.xStart <= iX && iX < figure.xEnd));\r\n    if (figure.yStart <= iY && iY < figure.yEnd) {\r\n      acc.push(...itemY.filter((itemX, iX) => figure.xStart - 1 === iX || iX === figure.xEnd));\r\n    }\r\n    return acc;\r\n  }, []);\r\n  const cellsUnderFigure = field.reduce((acc, itemY, iY, arr) => {\r\n    if (figure.yStart <= iY && iY < figure.yEnd)\r\n      acc.push(...itemY.filter((itemX, iX) => figure.xStart <= iX && iX < figure.xEnd));\r\n    return acc;\r\n  }, []);\r\n  if (cellsUnderFigure.filter((item) => item).length > 0) return false;\r\n  if (siblingCells.filter((item) => item?.color === player.color).length > 0) return true;\r\n  return false;\r\n}\r\n\r\nexport function fillFieldMatrix(fieldMatrix: GameArray, rectCoord: iRectangleCells, color: PlayerColor, isFM: boolean) {\r\n  const newFieldMatrix = fieldMatrix.map((item, indexY) => {\r\n    if (rectCoord.yStart <= indexY && indexY < rectCoord.yEnd) {\r\n      return item.map((item, indexX) => {\r\n        if (rectCoord.xStart <= indexX && indexX < rectCoord.xEnd) return { color: color, opacity: 0.5 };\r\n        return item ? Object.assign({}, item) : null;\r\n      });\r\n    }\r\n    return item.slice();\r\n  });\r\n  if (!isFM) autofilling(newFieldMatrix, color);\r\n  return newFieldMatrix;\r\n}\r\n","import { Dispatch } from 'redux';\r\nimport {\r\n  ROLL_THE_DICE,\r\n  GameActionTypes,\r\n  Dice,\r\n  ROTATE_FIGURE,\r\n  Dices,\r\n  iConfig,\r\n  SET_CONFIG,\r\n  iPlayer,\r\n  PlayerColor,\r\n  SET_FIGURE_POSITION,\r\n  SET_FIELD_MATRIX,\r\n  SET_FINAL_FIGURE_POSITION,\r\n  SET_TEMP_FIELD_MATRIX,\r\n  SET_PLAYER,\r\n  GameArray,\r\n} from './types';\r\nimport { getRandomInt, makeFieldMatrix } from '../../Helpers';\r\n\r\nexport function rollTheDice(playerColor?: PlayerColor) {\r\n  return function (dispatch: Dispatch<GameActionTypes>) {\r\n    const firstDice: Dice = getRandomInt();\r\n    const secondDice: Dice = getRandomInt();\r\n    dispatch({\r\n      type: ROLL_THE_DICE,\r\n      dice: [firstDice, secondDice],\r\n      currentFigure: makeFieldMatrix(firstDice, secondDice, playerColor),\r\n    });\r\n  };\r\n}\r\n\r\nexport function rotateFigure(dices: Dices, playerColor?: PlayerColor) {\r\n  return function (dispatch: Dispatch<GameActionTypes>) {\r\n    const firstDice = dices[1];\r\n    const secondDice = dices[0];\r\n    dispatch({\r\n      type: ROTATE_FIGURE,\r\n      dice: [firstDice, secondDice],\r\n      currentFigure: makeFieldMatrix(firstDice, secondDice, playerColor),\r\n    });\r\n  };\r\n}\r\n\r\nexport function setConfig(config: iConfig) {\r\n  return function (dispatch: Dispatch<GameActionTypes>) {\r\n    const players: Array<iPlayer> = config.players.map(\r\n      (item, index) => ({ name: item, color: ['Red', 'Green', 'Yellow', 'Blue'][index], count: 0 } as iPlayer)\r\n    );\r\n    const currentPlayer = players[getRandomInt(players.length) - 1];\r\n    dispatch({\r\n      type: SET_CONFIG,\r\n      config: config,\r\n      fieldMatrix: makeFieldMatrix(config.x, config.y),\r\n      tempFieldMatrix: makeFieldMatrix(config.x, config.y),\r\n      players: players,\r\n      currentPlayer: currentPlayer,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setFigurePosition(x: number, y: number) {\r\n  return function (dispatch: Dispatch<GameActionTypes>) {\r\n    dispatch({\r\n      type: SET_FIGURE_POSITION,\r\n      currentFigureX: x,\r\n      currentFigureY: y,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setFieldMatrix(newFieldMatrix: GameArray) {\r\n  return function (dispatch: Dispatch<GameActionTypes>) {\r\n    dispatch({\r\n      type: SET_FIELD_MATRIX,\r\n      fieldMatrix: newFieldMatrix,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setTempFieldMatrix(newFieldMatrix: GameArray) {\r\n  return function (dispatch: Dispatch<GameActionTypes>) {\r\n    dispatch({\r\n      type: SET_TEMP_FIELD_MATRIX,\r\n      tempFieldMatrix: newFieldMatrix,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setFinalFigurePosition(newFieldMatrix: GameArray) {\r\n  return function (dispatch: Dispatch<GameActionTypes>) {\r\n    dispatch({\r\n      type: SET_FINAL_FIGURE_POSITION,\r\n      tempFieldMatrix: newFieldMatrix,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setPlayer(player: iPlayer) {\r\n  return function (dispatch: Dispatch<GameActionTypes>) {\r\n    dispatch({\r\n      type: SET_PLAYER,\r\n      dice: null,\r\n      currentFigure: null,\r\n      currentPlayer: player,\r\n    });\r\n  };\r\n}\r\n","export const ROLL_THE_DICE = 'ROLL_THE_DICE';\r\nexport const ROTATE_FIGURE = 'ROTATE_FIGURE';\r\nexport const SET_CONFIG = 'SET_CONFIG';\r\nexport const SET_FIGURE_POSITION = 'SET_FIGURE_POSITION';\r\nexport const SET_FIELD_MATRIX = 'SET_FIELD_MATRIX';\r\nexport const SET_TEMP_FIELD_MATRIX = 'SET_TEMP_FIELD_MATRIX';\r\nexport const SET_FINAL_FIGURE_POSITION = 'SET_FINAL_FIGURE_POSITION';\r\nexport const SET_PLAYER = 'SET_PLAYER';\r\n\r\nexport interface GameState {\r\n  config: iConfig | null;\r\n  cellSide: number;\r\n  fieldMatrix: GameArray | null;\r\n  tempFieldMatrix: GameArray | null;\r\n  dice: Dices | null;\r\n  currentFigure: GameArray | null;\r\n  currentFigureX: number;\r\n  currentFigureY: number;\r\n  players: Array<iPlayer> | null;\r\n  currentPlayer: iPlayer | null;\r\n}\r\n\r\nexport interface iConfig {\r\n  x: number;\r\n  y: number;\r\n  players: Array<string>;\r\n}\r\nexport interface iPlayer {\r\n  name: string;\r\n  color: PlayerColor;\r\n  count: number;\r\n}\r\nexport type GameArray = Array<Array<TypeCell | null>>;\r\nexport interface TypeCell {\r\n  color: PlayerColor;\r\n  opacity: number;\r\n}\r\nexport type PlayerColor = 'Red' | 'Green' | 'Yellow' | 'Blue';\r\nexport type Dices = [Dice, Dice];\r\nexport type Dice = 1 | 2 | 3 | 4 | 5 | 6;\r\n\r\ninterface RollTheDice {\r\n  type: typeof ROLL_THE_DICE;\r\n  dice: Dices;\r\n  currentFigure: GameArray;\r\n}\r\n\r\ninterface RotateFigure {\r\n  type: typeof ROTATE_FIGURE;\r\n  dice: Dices;\r\n  currentFigure: GameArray;\r\n}\r\n\r\ninterface SetConfig {\r\n  type: typeof SET_CONFIG;\r\n  config: iConfig;\r\n  fieldMatrix: GameArray;\r\n  tempFieldMatrix: GameArray;\r\n  players: Array<iPlayer> | null;\r\n  currentPlayer: iPlayer;\r\n}\r\n\r\ninterface SetFigurePosition {\r\n  type: typeof SET_FIGURE_POSITION;\r\n  currentFigureX: number;\r\n  currentFigureY: number;\r\n}\r\n\r\ninterface SetFinalFigurePosition {\r\n  type: typeof SET_FINAL_FIGURE_POSITION;\r\n  tempFieldMatrix: GameArray | null;\r\n}\r\n\r\ninterface SetFieldMatrix {\r\n  type: typeof SET_FIELD_MATRIX;\r\n  fieldMatrix: GameArray | null;\r\n}\r\n\r\ninterface SetTempFieldMatrix {\r\n  type: typeof SET_TEMP_FIELD_MATRIX;\r\n  tempFieldMatrix: GameArray | null;\r\n}\r\n\r\ninterface SetPlayer {\r\n  type: typeof SET_PLAYER;\r\n  currentPlayer: iPlayer | null;\r\n}\r\n\r\nexport type GameActionTypes =\r\n  | RollTheDice\r\n  | RotateFigure\r\n  | SetConfig\r\n  | SetFigurePosition\r\n  | SetFieldMatrix\r\n  | SetFinalFigurePosition\r\n  | SetTempFieldMatrix\r\n  | SetPlayer;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setConfig } from '../../store/game/actions';\r\nimport { Form, Button, Input, InputNumber, Space, Card } from 'antd';\r\nimport { Store } from 'antd/lib/form/interface';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport './Configurator.css';\r\n\r\nfunction Configurator() {\r\n  const dispatch = useDispatch();\r\n  const submit = ({ x, y, players }: Store) => dispatch(setConfig({ x, y, players }));\r\n  return (\r\n    <Form\r\n      initialValues={{ x: 20, y: 20, players: ['Player 1', 'Player 2'] }}\r\n      onFinish={submit}\r\n      className='configurator'>\r\n      <Card title={'Configurator'}>\r\n        <Space direction='vertical'>\r\n          <Form.Item\r\n            {...layout}\r\n            label='Cells horizontaly'\r\n            name='y'\r\n            rules={[{ required: true, message: 'Please, input Y cells' }]}>\r\n            <InputNumber min={20} max={45} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            {...layout}\r\n            label='Cells verticaly'\r\n            name='x'\r\n            rules={[{ required: true, message: 'Please, input X cells' }]}>\r\n            <InputNumber min={20} max={45} />\r\n          </Form.Item>\r\n          <Form.List name='players'>\r\n            {(fields, { add, remove }) => {\r\n              return (\r\n                <div style={{ minHeight: 224, minWidth: 270 }}>\r\n                  {fields.map((field, index) => (\r\n                    <Form.Item label={`Player ${index + 1}`} required={true} key={field.key}>\r\n                      <Form.Item\r\n                        {...field}\r\n                        rules={[{ required: true, message: `Please input player's name.` }]}\r\n                        noStyle>\r\n                        <Input placeholder='player name' style={{ width: '90%' }} />\r\n                      </Form.Item>\r\n                      {fields.length > 2 ? (\r\n                        <MinusCircleOutlined\r\n                          style={{ marginLeft: 5 }}\r\n                          title='Remove player'\r\n                          onClick={() => remove(field.name)}\r\n                        />\r\n                      ) : null}\r\n                    </Form.Item>\r\n                  ))}\r\n                  {fields.length < 4 ? (\r\n                    <Form.Item>\r\n                      <Button title='Add player' type='dashed' onClick={() => add()}>\r\n                        <PlusOutlined /> Add player\r\n                      </Button>\r\n                    </Form.Item>\r\n                  ) : null}\r\n                </div>\r\n              );\r\n            }}\r\n          </Form.List>\r\n\r\n          <Form.Item>\r\n            <Button type='primary' block htmlType='submit' title='Start game'>\r\n              Start\r\n            </Button>\r\n          </Form.Item>\r\n        </Space>\r\n      </Card>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Configurator;\r\n\r\nconst layout = {\r\n  labelCol: { span: 12 },\r\n  wrapperCol: { span: 12 },\r\n};\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return <div className='header'>GAME RANDOMFILL</div>;\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { iPlayer } from '../../store/game/types';\r\nimport { useSelector } from 'react-redux';\r\nimport { iState } from '../../store';\r\n\r\nconst Title = ({ player }: { player: iPlayer | null }) => {\r\n  const additionScore = useSelector((state: iState) => state.game.tempFieldMatrix)\r\n    ?.flat()\r\n    .filter((item) => item?.opacity === 0.5).length;\r\n  if (!player) return null;\r\n  const { name, count, color } = player;\r\n  return (\r\n    <div>\r\n      <div>{name}</div>\r\n      <div style={{ color, fontSize: 12 }}>\r\n        score: {count} {additionScore ? `+ ${additionScore} = ${count + additionScore}` : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { useRef, useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Card, Popconfirm, Space } from 'antd';\r\nimport {\r\n  UndoOutlined,\r\n  RotateRightOutlined,\r\n  FastForwardOutlined,\r\n  CaretRightOutlined,\r\n  FallOutlined,\r\n} from '@ant-design/icons';\r\nimport { iState } from '../../store';\r\nimport {\r\n  rollTheDice,\r\n  rotateFigure,\r\n  setFigurePosition,\r\n  setFieldMatrix,\r\n  setTempFieldMatrix,\r\n  setPlayer,\r\n} from '../../store/game/actions';\r\n\r\nimport './ControlPanel.css';\r\nimport Title from './Title';\r\n\r\nfunction ControlPanel() {\r\n  const newFigureRef = useRef<HTMLDivElement>(null);\r\n  const dices = useSelector((state: iState) => state.game.dice);\r\n  const currentFigure = useSelector((state: iState) => state.game.currentFigure);\r\n  const currentPlayer = useSelector((state: iState) => state.game.currentPlayer);\r\n  const players = useSelector((state: iState) => state.game.players);\r\n  const tempFieldMatrix = useSelector((state: iState) => state.game.tempFieldMatrix);\r\n  const fieldMatrix = useSelector((state: iState) => state.game.fieldMatrix);\r\n  const [stepDone, setStepDone] = useState(false);\r\n  const [rollDiceDone, setRollDiceDone] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const mouseMoveHandler = useCallback(\r\n    (e: MouseEvent) => {\r\n      if (!newFigureRef.current) return;\r\n      newFigureRef.current.style.left = e.pageX - newFigureRef.current.offsetWidth / 2 + 'px';\r\n      newFigureRef.current.style.top = e.pageY - newFigureRef.current.offsetHeight / 2 + 'px';\r\n      dispatch(setFigurePosition(e.x, e.y));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const clickHandlerRoll = () => {\r\n    if (!currentPlayer?.color) return;\r\n    setRollDiceDone(true);\r\n    dispatch(rollTheDice(currentPlayer?.color));\r\n  };\r\n  const clickHandlerRotate = () => {\r\n    if (!currentPlayer?.color) return;\r\n    dispatch(rotateFigure(dices || [1, 1], currentPlayer?.color));\r\n  };\r\n  const onMouseDownHandler = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (!newFigureRef.current || stepDone) return;\r\n    newFigureRef.current.style.position = 'absolute';\r\n    newFigureRef.current.style.top = e.pageY - newFigureRef.current.offsetHeight / 2 + 'px';\r\n    newFigureRef.current.style.left = e.pageX - newFigureRef.current.offsetWidth / 2 + 'px';\r\n    document.addEventListener('mousemove', mouseMoveHandler);\r\n  };\r\n  const onMouseUpHandler = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    document.removeEventListener('mousemove', mouseMoveHandler);\r\n    if (!newFigureRef.current) return;\r\n    newFigureRef.current.style.position = 'static';\r\n    newFigureRef.current.style.top = 'auto';\r\n    newFigureRef.current.style.left = 'auto';\r\n    const isDifferent = tempFieldMatrix?.join() !== fieldMatrix?.join();\r\n    if (tempFieldMatrix && isDifferent) {\r\n      setStepDone(true);\r\n    }\r\n  };\r\n  const undoHandler = () => {\r\n    if (fieldMatrix) {\r\n      setStepDone(false);\r\n      dispatch(setTempFieldMatrix(fieldMatrix));\r\n    }\r\n  };\r\n\r\n  const passHandler = () => {\r\n    if (!players || !currentPlayer || !fieldMatrix) return;\r\n    const playerIndex = players.findIndex((item) => item.name === currentPlayer.name);\r\n    const nextPlayerIndex = playerIndex + 1;\r\n    const nextPlayer = players[nextPlayerIndex] || players[0];\r\n    setStepDone(false);\r\n    setRollDiceDone(false);\r\n    dispatch(setPlayer(nextPlayer));\r\n    dispatch(setTempFieldMatrix(fieldMatrix));\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    if (!players || !currentPlayer || !tempFieldMatrix) return;\r\n    const isDifferent = tempFieldMatrix?.join() !== fieldMatrix?.join();\r\n    if (tempFieldMatrix && isDifferent) {\r\n      dispatch(\r\n        setFieldMatrix(\r\n          tempFieldMatrix.map((item) =>\r\n            item.map((item) => {\r\n              if (item) item.opacity = 1;\r\n              return item;\r\n            })\r\n          )\r\n        )\r\n      );\r\n    }\r\n    const playerIndex = players.findIndex((item) => item.name === currentPlayer.name);\r\n    const nextPlayerIndex = playerIndex + 1;\r\n    const nextPlayer = players[nextPlayerIndex] || players[0];\r\n    setStepDone(false);\r\n    setRollDiceDone(false);\r\n    currentPlayer.count = tempFieldMatrix.flat().filter((item) => item?.color === currentPlayer.color).length;\r\n    dispatch(setPlayer(Object.assign({}, currentPlayer)));\r\n    dispatch(setPlayer(nextPlayer));\r\n  };\r\n  return (\r\n    <Card\r\n      style={{ position: 'static' }}\r\n      title={<Title player={currentPlayer} />}\r\n      actions={[\r\n        <Button\r\n          type='link'\r\n          title='Undo'\r\n          icon={<UndoOutlined style={{ fontSize: '28px', color: '#ff4d4f' }} />}\r\n          disabled={!stepDone}\r\n          onClick={undoHandler}\r\n          key='undo'\r\n        />,\r\n        <Button\r\n          type='link'\r\n          title='Submit move'\r\n          icon={<CaretRightOutlined style={{ fontSize: '28px', color: 'green' }} />}\r\n          disabled={!stepDone}\r\n          onClick={submitHandler}\r\n          key='submit'\r\n        />,\r\n      ]}>\r\n      <Space style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Button\r\n          type='primary'\r\n          size='large'\r\n          title='Roll dice/Get figure'\r\n          disabled={rollDiceDone}\r\n          onClick={clickHandlerRoll}\r\n          icon={<FallOutlined />}\r\n        />\r\n        <Button\r\n          title='Rotate figure'\r\n          type='primary'\r\n          size='large'\r\n          disabled={!dices}\r\n          onClick={clickHandlerRotate}\r\n          icon={<RotateRightOutlined />}\r\n        />\r\n        <Popconfirm title='Are you sure to skip move' onConfirm={passHandler}>\r\n          <Button danger title='Skipping' size='large' icon={<FastForwardOutlined />} />\r\n        </Popconfirm>\r\n      </Space>\r\n      <div className='new-figure-wrapper'>\r\n        <div className='new-figure' ref={newFigureRef} onMouseDown={onMouseDownHandler} onMouseUp={onMouseUpHandler}>\r\n          {currentFigure &&\r\n            currentFigure.map((item, index) => (\r\n              <div key={index} className='new-figure__row'>\r\n                {item.map((item, index) => (\r\n                  <span\r\n                    key={index}\r\n                    style={{ backgroundColor: stepDone ? 'grey' : item?.color || '', zIndex: 100 }}\r\n                    className='new-figure__cell'></span>\r\n                ))}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport './GameField.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { iState } from '../../store';\r\nimport { setTempFieldMatrix } from '../../store/game/actions';\r\nimport {\r\n  isInsideGameField,\r\n  setRectangleCells,\r\n  isFirstMove,\r\n  isOverEdge,\r\n  isInCorner,\r\n  isInsertByRules,\r\n  fillFieldMatrix,\r\n} from '../../Helpers';\r\n\r\nfunction GameField() {\r\n  const fieldMatrixRef = useRef<HTMLDivElement>(null);\r\n  const dispatch = useDispatch();\r\n  const fieldMatrix = useSelector((state: iState) => state.game.fieldMatrix);\r\n  const tempFieldMatrix = useSelector((state: iState) => state.game.tempFieldMatrix);\r\n  const cellSide = useSelector((state: iState) => state.game.cellSide);\r\n  const config = useSelector((state: iState) => state.game.config);\r\n  const currentPlayer = useSelector((state: iState) => state.game.currentPlayer);\r\n  const dice = useSelector((state: iState) => state.game.dice);\r\n  const currentFigureX = useSelector((state: iState) => state.game.currentFigureX);\r\n  const currentFigureY = useSelector((state: iState) => state.game.currentFigureY);\r\n  const [geometry, setGeometry] = useState<DOMRect | null>(null);\r\n\r\n  useEffect(() => {\r\n    const resizeHandler = () => {\r\n      if (fieldMatrixRef.current) setGeometry(fieldMatrixRef.current.getBoundingClientRect());\r\n    };\r\n    window.addEventListener('resize', resizeHandler);\r\n    return () => window.removeEventListener('resize', resizeHandler);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!fieldMatrixRef.current) return;\r\n    setGeometry(fieldMatrixRef.current.getBoundingClientRect());\r\n  }, [fieldMatrixRef]);\r\n  useEffect(() => {\r\n    if (!fieldMatrixRef.current || !geometry || !config || !tempFieldMatrix || !fieldMatrix || !dice || !currentPlayer)\r\n      return;\r\n    if (!isInsideGameField(geometry, currentFigureX, currentFigureY)) dispatch(setTempFieldMatrix(fieldMatrix));\r\n    else {\r\n      const mouseOverCellX = (currentFigureX - geometry.left) / cellSide;\r\n      const mouseOverCellY = (currentFigureY - geometry.top) / cellSide;\r\n      const rectCoord = setRectangleCells(mouseOverCellX, mouseOverCellY, dice);\r\n      const isFM = isFirstMove(currentPlayer?.count);\r\n      //Если фигура залазит за край поля, выходим\r\n      if (isOverEdge(rectCoord, config)) dispatch(setTempFieldMatrix(fieldMatrix));\r\n      //Если первый ход и не в углу, выходим\r\n      else if (isFM && !isInCorner(rectCoord, config)) dispatch(setTempFieldMatrix(fieldMatrix));\r\n      //Проверка по правилам ли вставка\r\n      else if (!isInsertByRules(fieldMatrix, rectCoord, currentPlayer, isFM)) dispatch(setTempFieldMatrix(fieldMatrix));\r\n      else {\r\n        const newFieldMatrix = fillFieldMatrix(fieldMatrix, rectCoord, currentPlayer.color, isFM);\r\n        dispatch(setTempFieldMatrix(newFieldMatrix));\r\n      }\r\n    }\r\n  }, [\r\n    currentFigureX,\r\n    currentFigureY,\r\n    cellSide,\r\n    config,\r\n    dispatch /*currentPlayer, dice, fieldMatrix, geometry, tempFieldMatrix */,\r\n  ]);\r\n  return (\r\n    <div ref={fieldMatrixRef} className='game-field'>\r\n      {tempFieldMatrix &&\r\n        tempFieldMatrix.map((item, index) => (\r\n          <div key={index} className='game-field__row'>\r\n            {item.map((item, index) => (\r\n              <span\r\n                key={index}\r\n                style={{ backgroundColor: item?.color || '', opacity: item?.opacity }}\r\n                className='game-field__cell'></span>\r\n            ))}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameField;\r\n","import React from 'react';\r\nimport ControlPanel from '../ControlPanel';\r\nimport GameField from '../GameField';\r\n\r\nimport './Game.css';\r\n\r\nfunction Game() {\r\n  return (\r\n    <div className='game'>\r\n      <ControlPanel />\r\n      <GameField />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className='footer'>\r\n      developer <a href='https://github.com/shersh1k'>shersh1k</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { iState } from '../../store';\nimport Configurator from '../Configurator';\nimport Header from '../Header';\nimport Game from '../Game';\nimport Footer from '../Footer';\nimport './App.css';\n\nfunction App() {\n  const config = useSelector((state: iState) => state.game.config);\n  return (\n    <div className='app'>\n      <Header />\n      {!config ? <Configurator /> : <Game />}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  GameState,\r\n  GameActionTypes,\r\n  ROLL_THE_DICE,\r\n  ROTATE_FIGURE,\r\n  SET_CONFIG,\r\n  SET_FIGURE_POSITION,\r\n  SET_FIELD_MATRIX,\r\n  SET_FINAL_FIGURE_POSITION,\r\n  SET_TEMP_FIELD_MATRIX,\r\n  SET_PLAYER,\r\n} from './types';\r\n\r\nconst initialState: GameState = {\r\n  config: null,\r\n  cellSide: 20,\r\n  fieldMatrix: null,\r\n  tempFieldMatrix: null,\r\n  dice: null,\r\n  currentFigure: null,\r\n  players: null,\r\n  currentPlayer: null,\r\n  currentFigureX: 0,\r\n  currentFigureY: 0,\r\n};\r\n\r\nexport function gameReducer(state = initialState, action: GameActionTypes) {\r\n  switch (action.type) {\r\n    case ROLL_THE_DICE:\r\n      return { ...state, ...action };\r\n    case ROTATE_FIGURE:\r\n      return { ...state, ...action };\r\n    case SET_CONFIG:\r\n      return { ...state, ...action };\r\n    case SET_FIGURE_POSITION:\r\n      return { ...state, ...action };\r\n    case SET_FIELD_MATRIX:\r\n      return { ...state, ...action };\r\n    case SET_TEMP_FIELD_MATRIX:\r\n      return { ...state, ...action };\r\n    case SET_FINAL_FIGURE_POSITION:\r\n      return { ...state, ...action };\r\n    case SET_PLAYER:\r\n      return { ...state, ...action };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, Middleware, Dispatch, AnyAction } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { gameReducer } from './game/reducers';\r\nimport { GameState } from './game/types';\r\n\r\nconst middlewares: Middleware<{}, any, Dispatch<AnyAction>>[] = [thunkMiddleware];\r\nif (process.env.NODE_ENV !== 'production') middlewares.push(logger);\r\n\r\nexport const store = createStore(\r\n  combineReducers({\r\n    game: gameReducer,\r\n  }),\r\n  applyMiddleware(...middlewares)\r\n);\r\n\r\nexport interface iState {\r\n  game: GameState;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}